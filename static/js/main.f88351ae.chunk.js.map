{"version":3,"sources":["components/Episode.js","components/Pagination.js","App.js","index.js"],"names":["Episode","episodes","react_default","a","createElement","className","map","data","index","key","name","air_date","episode","Pagination","episodePerPage","totalEpisode","paginate","pageNumbers","i","Math","ceil","push","num","onClick","href","App","_useState","useState","_useState2","Object","slicedToArray","setEpisode","_useState3","_useState4","currentPage","setCurrentPage","_useState5","_useState7","_useState8","search","setSearch","_useState9","_useState10","before","setBefore","useEffect","_ref","asyncToGenerator","regenerator_default","mark","_callee","res","res1","wrap","_context","prev","next","axios","get","sent","results","concat","stop","apply","this","arguments","fetchEpisodes","indexOfLastEpisode","indexOfFirstEpisode","currentEpisode","slice","handleSubmit","_ref2","_callee2","e","_context2","preventDefault","_x","onSubmit","type","placeholder","value","onChange","target","components_Episode","Fragment","components_Pagination","length","pageNumber","rootElement","document","getElementById","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.f88351ae.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Episode = ({ episodes }) => {\n  // console.log(\"getall\", episodes);\n  return (\n    <section className=\"container\">\n      <div className=\"row justify-content-center\">\n        {episodes &&\n          episodes.map((data, index) => (\n            <div key={index} className=\"episode-box shadow-sm\">\n              <h4>{data.name}</h4>\n              <p>{data.air_date} </p>\n              <h5> {data.episode} </h5>\n            </div>\n          ))}\n      </div>\n    </section>\n  );\n};\n\nexport default Episode;\n","import React from \"react\";\n\nconst Pagination = ({ episodePerPage, totalEpisode, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalEpisode / episodePerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav className=\"d-flex justify-content-center\">\n      <ul className=\"pagination\">\n        {pageNumbers.map(num => (\n          <li key={num} className=\"page-item\">\n            <a onClick={() => paginate(num)} className=\"page-link\" href=\"!#\">\n              {num}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Episode from \"./components/Episode\";\nimport Pagination from \"./components/Pagination\";\nimport \"./styles.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst App = () => {\n  const [episode, setEpisode] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [episodePerPage] = useState(20);\n  const [search, setSearch] = useState(\"\");\n  const [before, setBefore] = useState(false);\n\n  useEffect(() => {\n    const fetchEpisodes = async () => {\n      const res = await axios.get(\"https://rickandmortyapi.com/api/episode\");\n      setEpisode(res.data.results);\n      const res1 = await axios.get(\n        \"https://rickandmortyapi.com/api/episode?page=2\"\n      );\n      // setEpisode(res1.data.results);\n      setEpisode(episode => episode.concat(res1.data.results));\n    };\n    fetchEpisodes();\n  }, []);\n\n  // get Episodes\n  const indexOfLastEpisode = currentPage * episodePerPage;\n  const indexOfFirstEpisode = indexOfLastEpisode - episodePerPage;\n  const currentEpisode = before\n    ? null\n    : episode.slice(indexOfFirstEpisode, indexOfLastEpisode);\n\n  // set Episode Pages\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  // form data\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setBefore(true);\n    // console.log(`Submitting Name ${search}`);\n    const get = await axios.get(\n      `https://rickandmortyapi.com/api/episode/?name=${search}`\n    );\n    // console.log(\"search\", get);\n    setEpisode(get.data.results);\n  };\n\n  return (\n    <main>\n      <section className=\"jumbotron text-center\">\n        <div className=\"container\">\n          <h1>The Rick and Morty Episode's</h1>\n          <form onSubmit={handleSubmit}>\n            <div className=\"input-group mb-3\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Episode name\"\n                value={search}\n                onChange={e => setSearch(e.target.value)}\n              />\n              <div className=\"input-group-append\">\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Search\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </section>\n      {before ? (\n        <Episode episodes={episode} />\n      ) : (\n        <>\n          <Episode episodes={currentEpisode} />\n          <Pagination\n            episodePerPage={episodePerPage}\n            totalEpisode={episode.length}\n            paginate={paginate}\n          />\n        </>\n      )}\n    </main>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}